<%#
kind: user_data
name: UserData lab.trashnet.xyz
model: ProvisioningTemplate
oses:
- CentOS
- Fedora
-%>
<%#
This template accepts the following parameters:
- ssh_authorized_keys: string w newline seperated keys (default="")
- package_upgrade: boolean (default=false)
- freeipa_getcert: boolean (default=false)
- enable-epel: boolean (default=false)
- reboot: boolean (default=false)
-%>

#cloud-config
hostname: <%= @host %>
fqdn: <%= @host %>
manage_etc_hosts: true

<% if host_param('ssh_authorized_keys') -%>
ssh_authorized_keys:
<% host_param('ssh_authorized_keys').split("\n").each do |ssh_key| -%>
- <%= ssh_key %>
<% end -%>
<% end -%>

<% if host_param_true?('package_upgrade') -%>
package_upgrade: true
<% end -%>

runcmd:
<%# Wait for network to come up -%>
- until ping -c 1 <%= foreman_server_fqdn %>; do sleep 5; done

<%# IPA Registration -%>
<% if host_enc['parameters']['realm'] && @host.realm && (@host.realm.realm_type == 'FreeIPA' || @host.realm.realm_type == 'Red Hat Identity Management') -%>
- |
<%= indent(2) { snippet('freeipa_register') } %>
<% if host_param_true?('freeipa_getcert') -%>
- chcon -t cert_t /etc/cockpit/ws-certs.d
- ipa-getcert request -K HTTP/$(hostname) -k /etc/pki/tls/private/$(hostname).key -f /etc/pki/tls/certs/$(hostname).pem -D $(hostname) -C "sed -n w/etc/cockpit/ws-certs.d/50-from-certmonger.cert /etc/pki/tls/certs/$(hostname).pem /etc/pki/tls/private/$(hostname).key"
- systemctl enable --now cockpit.socket
<% end -%>
<% end -%>

<%# Katello registration -%>
<% if host_param('kt_activation_keys') -%>
- |
<%= indent(2) { snippet('redhat_register custom') } %>
<% if host_param('kt_activation_keys').include?('CentOS') -%>
- rm -f /etc/yum.repos.d/CentOS-*.repo
<% end -%>
<% end -%>

<%# Enable EPEL -%>
<% if host_param_true?('enable-epel') -%>
- |
<%= indent(2) { snippet('epel') } %>
<% end -%>

- touch /etc/cloud/cloud-init.disabled

<%# Contact Foreman to confirm instance is built -%>
phone_home:
  url: <%= foreman_url('built') %>
  post: []
  tries: 10

<% if host_param_true?('reboot') -%>
power_state:
  mode: reboot
  timeout: 30
  condition: true
<% end -%>

